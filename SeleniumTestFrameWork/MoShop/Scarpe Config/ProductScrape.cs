// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using OpenQA.Selenium.Support.UI;
    using Selenium;
    using System;
    using System.Threading;
    
    internal class ProductScrape
    {
        public void productscrape(IWebDriver driver, ISelenium selenium, datarow datarow)
        {
            try
            {


                driver.FindElement(By.XPath("(//a[contains(text(),'â€¦')])[3]")).Click();
                selenium.WaitForPageToLoad("30000");
                driver.FindElement(By.LinkText("Target Pages")).Click();
                selenium.WaitForPageToLoad("30000");
                driver.FindElement(By.Id("Selector")).Clear();
                driver.FindElement(By.Id("Selector")).SendKeys("div[class^='singleproduct']>a");
                driver.FindElement(By.Id("Identifier")).Clear();
                driver.FindElement(By.Id("Identifier")).SendKeys("/acatalog/glitter-tree-wrapping-paper.html");
                driver.FindElement(By.Id("IdentifierTransformationPattern")).Clear();
                driver.FindElement(By.Id("IdentifierTransformationPattern")).SendKeys(@"\/acatalog\/([a-z0-9\-_]+).html");
                driver.FindElement(By.Id("IdentifierTransformationReplacement")).Clear();
                driver.FindElement(By.Id("IdentifierTransformationReplacement")).SendKeys("$1");
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);

                driver.FindElement(By.LinkText("Scrape Mappings")).Click();
                selenium.WaitForPageToLoad("30000");
                new SelectElement(driver.FindElement(By.Id("MappingId"))).SelectByText("(new mappings)");
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                driver.FindElement(By.Id("MappingItems_0__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_0__Selector")).SendKeys("h1");

                driver.FindElement(By.Id("MappingItems_0__Selector")).SendKeys(Keys.Enter);
                selenium.WaitForPageToLoad("30000");
                string[] datas = selenium.GetSelectOptions("id=MappingItems_0__DataPath");
                foreach (string data in datas)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_0__DataPath"))).SelectByText(data);
                    if (data == "Name")
                    {
                        break;
                    }
                }
                string[] trims = selenium.GetSelectOptions("id=MappingItems_0__TransformationId");
                foreach (string trim in trims)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_0__TransformationId"))).SelectByText(trim);
                    if (trim == "Content Trim")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);
                driver.FindElement(By.Id("MappingItems_1__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_1__Selector")).SendKeys("#contentTab1,#contentTab2");

                string[] desc = selenium.GetSelectOptions("id=MappingItems_1__DataPath");
                foreach (string des in desc)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_1__DataPath"))).SelectByText(des);
                    if (des == "Description")
                    {
                        break;
                    }
                }
                string[] cons = selenium.GetSelectOptions("id=MappingItems_1__TransformationId");
                foreach (string con in cons)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_1__TransformationId"))).SelectByText(con);
                    if (con == "Content Trim")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);
                driver.FindElement(By.Id("MappingItems_2__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_2__Selector")).SendKeys(".MagicZoomPlus");
                string[] images = selenium.GetSelectOptions("id=MappingItems_2__DataPath");
                foreach (string image in images)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_2__DataPath"))).SelectByText(image);
                    if (image == "MainImage")
                    {
                        break;
                    }
                }
                string[] contrims = selenium.GetSelectOptions("id=MappingItems_2__TransformationId");
                foreach (string contrim in contrims)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_2__TransformationId"))).SelectByText(contrim);
                    if (contrim == "Content Trim")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);

                driver.FindElement(By.Id("MappingItems_3__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_3__Selector")).SendKeys("[retail_price_prompt]:first");
                string[] prices = selenium.GetSelectOptions("id=MappingItems_3__DataPath");
                foreach (string price in prices)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_3__DataPath"))).SelectByText(price);
                    if (price == "Price")
                    {
                        break;
                    }
                }
                string[] tickepr = selenium.GetSelectOptions("id=MappingItems_3__TransformationId");
                foreach (string tick in tickepr)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_3__TransformationId"))).SelectByText(tick);
                    if (tick == "Tickle Price")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);
                driver.FindElement(By.Id("MappingItems_4__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_4__Selector")).SendKeys("[PROD_REF]:first");
                driver.FindElement(By.Id("MappingItems_4__Attribute")).Clear();
                driver.FindElement(By.Id("MappingItems_4__Attribute")).SendKeys("PROD_REF");
                string[] codes = selenium.GetSelectOptions("id=MappingItems_4__DataPath");
                foreach (string code in codes)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_4__DataPath"))).SelectByText(code);
                    if (code == "Code")
                    {
                        break;
                    }
                }
                string[] trimes = selenium.GetSelectOptions("id=MappingItems_4__TransformationId");
                foreach (string trimm in trimes)
                {

                    new SelectElement(driver.FindElement(By.Id("MappingItems_4__TransformationId"))).SelectByText(trimm);
                    if (trimm == "Trim")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);
                driver.FindElement(By.Id("MappingItems_5__Selector")).Clear();
                driver.FindElement(By.Id("MappingItems_5__Selector")).SendKeys(".itemAddtional strong:has([retail_price_prompt]):prev()");
                string[] priceorg = selenium.GetSelectOptions("id=MappingItems_5__DataPath");
                foreach (string proceorigi in priceorg)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_5__DataPath"))).SelectByText(proceorigi);
                    if (proceorigi == "PriceOriginal")
                    {
                        break;
                    }
                }
                string[] pp = selenium.GetSelectOptions("id=MappingItems_5__TransformationId");
                foreach (string pr in pp)
                {
                    new SelectElement(driver.FindElement(By.Id("MappingItems_5__TransformationId"))).SelectByText(pr);
                    if (pr == "Price")
                    {
                        break;
                    }
                }
                driver.FindElement(By.CssSelector("input.button")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(3000);

                #region Validations

                string attribute = driver.FindElement(By.Id("Selector")).GetAttribute("Value");
                string actual = driver.FindElement(By.Id("Identifier")).GetAttribute("Value");
                string str3 = driver.FindElement(By.Id("IdentifierTransformationPattern")).GetAttribute("Value");
                string str4 = driver.FindElement(By.Id("IdentifierTransformationReplacement")).GetAttribute("Value");
                string str5 = driver.FindElement(By.Id("MappingItems_0__Selector")).GetAttribute("Value");
                string str6 = driver.FindElement(By.Id("MappingItems_1__Selector")).GetAttribute("Value");
                string str7 = driver.FindElement(By.Id("MappingItems_2__Selector")).GetAttribute("Value");
                string str8 = driver.FindElement(By.Id("MappingItems_3__Selector")).GetAttribute("Value");
                string str9 = driver.FindElement(By.Id("MappingItems_4__Selector")).GetAttribute("Value");
                string str10 = driver.FindElement(By.Id("MappingItems_5__Selector")).GetAttribute("Value");

                if (attribute == "div[class^='singleproduct']>a")
                {
                    datarow.newrow("Product selector", "div[class^='singleproduct']>a", attribute, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Product selector", "div[class^='singleproduct']>a", attribute, "FAIL", driver, selenium);
                }
                if (actual == "/acatalog/glitter-tree-wrapping-paper.html")
                {
                    datarow.newrow("Products Identifier", "/acatalog/glitter-tree-wrapping-paper.html", actual, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Identifier", "/acatalog/glitter-tree-wrapping-paper.html", actual, "FAIL", driver, selenium);
                }
                if (str3 == @"\/acatalog\/([a-z0-9\-_]+).html")
                {
                    datarow.newrow("Products Idntifier Transformation", @"\/acatalog\/([a-z0-9\-_]+).html", str3, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Idntifier Transformation", @"\/acatalog\/([a-z0-9\-_]+).html", str3, "FAIL", driver, selenium);
                }
                if (str4 == "$1")
                {
                    datarow.newrow("Products Identifier Replacement", "$1", str4, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Identifier Replacement", "$1", str4, "FAIL", driver, selenium);
                }
                if (str5 == "h1")
                {
                    datarow.newrow("Product Mapping selector", "h1", str5, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Product Mapping selector", "h1", str5, "FAIL", driver, selenium);
                }
                if (str6 == "#contentTab1,#contentTab2")
                {
                    datarow.newrow("Products Mapping Selector1", "#contentTab1,#contentTab2", str6, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Mapping Selector1", "#contentTab1,#contentTab2", str6, "FAIL", driver, selenium);
                }
                if (str7 == ".MagicZoomPlus")
                {
                    datarow.newrow("Products Mapping selector2", ".MagicZoomPlus", str7, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Mapping selector2", ".MagicZoomPlus", str7, "FAIL", driver, selenium);
                }
                if (str8 == "[retail_price_prompt]:first")
                {
                    datarow.newrow("Products Mapping Selector3", "[retail_price_prompt]:first", str8, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Mapping Selector3", "[retail_price_prompt]:first", str8, "FAIL", driver, selenium);
                }
                if (str9 == "[PROD_REF]:first")
                {
                    datarow.newrow("Products Mapping selector4", "[PROD_REF]:first", str9, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Mapping selector4", "[PROD_REF]:first", str9, "FAIL", driver, selenium);
                }
                if (str10 == ".itemAddtional strong:has([retail_price_prompt]):prev()")
                {
                    datarow.newrow("Products Mapping selector5", ".itemAddtional strong:has([retail_price_prompt]):prev()", str10, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrow("Products Mapping selector5", ".itemAddtional strong:has([retail_price_prompt]):prev()", str10, "FAIL", driver, selenium);
                }
                #endregion
            }
            catch (Exception ex)
            {
            }
            driver.FindElement(By.LinkText("Scrape")).Click();
            selenium.WaitForPageToLoad("30000");
        }
    }
}
