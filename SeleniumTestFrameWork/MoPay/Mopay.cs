// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using NUnit.Framework;
    using OpenQA.Selenium;
    using Selenium;
    using System;
    using System.Data;
    using System.Text.RegularExpressions;
    using System.Threading;
    
    public class Mopay
    {
        private MoBankUI.datarow datarow = new MoBankUI.datarow();
        private GeneralLibrary generalLibrary;
        public WebDriverBackedSelenium selenium;
        
        public void Dsecure(IWebDriver driver, ISelenium selenium)
        {
            IWebElement frameElement = driver.FindElement(By.TagName("iframe"));
            driver.SwitchTo().Frame(frameElement);
            driver.FindElement(By.CssSelector("input[type=\"submit\"]")).Click();
            Thread.Sleep(0x1388);
            Thread.Sleep(0x1f40);
            string location = selenium.GetLocation();
            if (location.Contains("3DSecureState=Success"))
            {
                this.datarow.newrow("3D secure", location, "3DSecureState=Success", "PASS", driver, selenium);
                if (selenium.IsElementPresent("link=start again"))
                {
                    selenium.Click("link=start again");
                }
                else
                {
                    driver.Navigate().GoToUrl("http://devpaytest.mobankdev.com/");
                }
            }
            else
            {
                this.datarow.newrow("3D secure", location, "3D secure Declined", "FAIL", driver, selenium);
                if (selenium.IsElementPresent("link=start again"))
                {
                    selenium.Click("link=start again");
                }
                else
                {
                    driver.Navigate().GoToUrl("http://devpaytest.mobankdev.com/");
                }
            }
        }
        
        public void MoPay(IWebDriver driver, ISelenium selenium)
        {
            this.generalLibrary = new GeneralLibrary();
            DataSet excelData = this.generalLibrary.GetExcelData(@"C:\Selenium\Input Data\CardDetails.xls", "CardDetails");
            DataSet set2 = this.generalLibrary.GetExcelData(@"C:\Selenium\Input Data\CardDetails.xls", "Account");
            this.datarow.col();
            DataTable table = excelData.Tables[0];
            DataTable table2 = set2.Tables[0];
            try
            {
                string actual = driver.FindElement(By.XPath("//div[@id='total-amount']/dl/dd")).Text;
                if (actual.Contains("\x00a3"))
                {
                    this.datarow.newrow("Currency Validation", "\x00a3", actual, "PASS", driver, selenium);
                }
                else
                {
                    this.datarow.newrow("Currency Validation", "\x00a3", actual, "FAIL", driver, selenium);
                }
            }
            catch (Exception exception)
            {
                string str2 = exception.ToString();
                this.datarow.newrow("Exception", "Exception Not Expected", str2, "FAIL", driver, selenium);
            }
            int count = table2.Rows.Count;
            try
            {
                for (int i = 0; i < count; i++)
                {
                    string str3 = table2.Rows[i]["Account"].ToString();
                    string locator = table2.Rows[i]["Type"].ToString();
                    string str5 = table2.Rows[i]["E-mail"].ToString();
                    string str6 = table2.Rows[i]["FormData"].ToString();
                    string str7 = table2.Rows[i]["FormValue"].ToString();
                    string str8 = table2.Rows[i]["CookieData"].ToString();
                    string str9 = table2.Rows[i]["CookieValue"].ToString();
                    selenium.Open("http://devpaytest.mobankdev.com/");
                    driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(15.0));
                    IWebElement element = driver.FindElement(By.XPath("//div[@id='ReferenceControl']/div/input"));
                    if (i <= 1)
                    {
                        selenium.Click("id=Account_13");
                    }
                    else
                    {
                        selenium.Click("id=Account_14");
                    }
                    selenium.Click(locator);
                    string attribute = driver.FindElement(By.XPath("//div[@id='ReferenceControl']/div/input")).GetAttribute("Reference");
                    string str11 = driver.FindElement(By.XPath("//div[@id='TotalAmountControl']/div/input")).GetAttribute("Amt");
                    string str12 = driver.FindElement(By.XPath("//div[@id='CurrencyCodeControl']/div/select")).GetAttribute("Cur");
                    string input = table.Rows[0]["FirstName"].ToString();
                    string str14 = table.Rows[0]["LastName"].ToString();
                    Assert.AreEqual("The MoShop Sale", driver.FindElement(By.XPath("//div[@id='DescriptionControl']/div/textarea")).Text);
                    MoBankUI.Screenshot screenshot = new MoBankUI.Screenshot();
                    driver.FindElement(By.XPath("//div[@id='FirstNameControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='FirstNameControl']/div/input")).SendKeys(input);
                    driver.FindElement(By.XPath("//div[@id='LastNameControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='LastNameControl']/div/input")).SendKeys(str14);
                    driver.FindElement(By.XPath("//div[@id='EmailControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='EmailControl']/div/input")).SendKeys(str5);
                    selenium.Click("css=button");
                    selenium.Type("name=FormData[1].Key", str6);
                    selenium.Type("name=FormData[1].Value", str7);
                    selenium.Click("css=#CookieData > button");
                    selenium.Type("name=CookieData[1].Key", str8);
                    selenium.Type("name=CookieData[1].Value", str9);
                    driver.FindElement(By.CssSelector("input[type=\"submit\"]")).Click();
                    this.datarow.newrow("Account", "Type", locator, "PASS", driver, selenium);
                    selenium.WaitForPageToLoad("60000");
                    int num3 = table.Columns.Count;
                    for (int j = 0; j < num3; j++)
                    {
                        string str15 = table.Rows[j]["Card Number"].ToString();
                        string str16 = table.Rows[j]["Security Code"].ToString();
                        string expected = table.Rows[j]["CardType"].ToString();
                        string str18 = table.Rows[j]["Name on Card"].ToString();
                        string optionLocator = table.Rows[j]["ExpiryMonth"].ToString();
                        string str20 = table.Rows[j]["Expiry Year"].ToString();
                        string str21 = table.Rows[j]["Phone Number"].ToString();
                        string str22 = table.Rows[j]["Address"].ToString();
                        string str23 = table.Rows[j]["City"].ToString();
                        string str24 = table.Rows[j]["Post Code"].ToString();
                        string str25 = table.Rows[j]["County"].ToString();
                        string str26 = table.Rows[j]["Country"].ToString();
                        driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(60.0));
                        IWebElement element2 = driver.FindElement(By.XPath("//div[@id='Card.NameControl']/input"));
                        Assert.AreEqual("Secure Payment Page", driver.Title);
                        selenium.Type("//*[@id='Card_Number']", str15);
                        selenium.Type("//*[@id='Card_SecurityCode']", str16);
                        selenium.Select("id=Card_Type", "label=Visa");
                        selenium.Select("id=Card_ExpiryDate_Month", optionLocator);
                        selenium.Select("id=Card_ExpiryDate_Year", str20);
                        selenium.Type("//div[@id='Card.NameControl']/input", str18);
                        if (selenium.IsVisible("id=change-address"))
                        {
                            driver.FindElement(By.Id("change-address")).Click();
                        }
                        switch (locator)
                        {
                            case "id=actionPay":
                                driver.FindElement(By.Id("BillingContact_Phone_Number")).Clear();
                                selenium.Type("id=BillingContact_Phone_Number", str21);
                                driver.FindElement(By.Id("BillingContact_Address_Line1")).Clear();
                                selenium.Type("id=BillingContact_Address_Line1", str22);
                                selenium.Type("//div[@id='BillingContact.Address.Line2Control']/input", "Test Address2");
                                driver.FindElement(By.Id("BillingContact_Address_Postcode")).Clear();
                                selenium.Type("id=BillingContact_Address_Postcode", str24);
                                driver.FindElement(By.XPath("//div[@id='BillingContact.Address.TownControl']/input")).Clear();
                                selenium.Type("//div[@id='BillingContact.Address.TownControl']/input", str23);
                                driver.FindElement(By.Id("BillingContact_Address_County")).Clear();
                                selenium.Type("id=BillingContact_Address_County", str25);
                                selenium.Select("//div[@id='BillingContact.Address.CountryControl']/div/div/select", str26);
                                break;
                            
                            case "id=actionToken":
                                driver.FindElement(By.Id("Contact_Phone_Number")).Clear();
                                selenium.Type("id=Contact_Phone_Number", str21);
                                driver.FindElement(By.Id("Contact_Address_Line1")).Clear();
                                selenium.Type("id=Contact_Address_Line1", str22);
                                selenium.Type("//div[@id='Contact.Address.Line2Control']/input", "Addres2");
                                driver.FindElement(By.Id("Contact_Address_Postcode")).Clear();
                                selenium.Type("id=Contact_Address_Postcode", str24);
                                driver.FindElement(By.XPath("//div[@id='Contact.Address.TownControl']/input")).Clear();
                                selenium.Type("//div[@id='Contact.Address.TownControl']/input", str23);
                                driver.FindElement(By.Id("Contact_Address_County")).Clear();
                                selenium.Type("id=Contact_Address_County", str25);
                                selenium.Select("//div[@id='Contact.Address.CountryControl']/div/div/select", str26);
                                break;
                        }
                        selenium.Click("name=PostAction[Complete]");
                        selenium.WaitForPageToLoad("30000");
                        Thread.Sleep(3000);
                        if (Regex.IsMatch(str15, "^[0-9'']"))
                        {
                            this.datarow.newrow("Card Number", str15, str15, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Number required") || selenium.IsTextPresent("Number invalid"))
                        {
                            this.datarow.newrow("Card Number", str15, "Number Invalid", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Card Number", str15, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (expected == null)
                        {
                            if (selenium.IsTextPresent("Type required"))
                            {
                                this.datarow.newrow("Card Type", expected, "Type Required", "PASS", driver, selenium);
                            }
                            else
                            {
                                this.datarow.newrow("Card Type", expected, expected, "FAIL", driver, selenium);
                                screenshot.screenshotfailed(driver, selenium);
                            }
                        }
                        else
                        {
                            this.datarow.newrow("Card Type", expected, expected, "PASS", driver, selenium);
                        }
                        Regex regex = new Regex("^[0-9]{3}$");
                        if (regex.IsMatch(str16))
                        {
                            this.datarow.newrow("Security Code", str16, "Valid 3 Digits", "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Security code required") || selenium.IsTextPresent("Security code invalid"))
                        {
                            this.datarow.newrow("Security Code", str16, "Security code required", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Security Code", str16, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str18, "^[a-zA-Z'']"))
                        {
                            this.datarow.newrow("Name on Card", str18, str18, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Name required"))
                        {
                            this.datarow.newrow("Name on Card", str18, "Name Required", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Name on Card", str18, "No Error Message Displayed", "PASS", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(input, "^[a-zA-Z'']"))
                        {
                            this.datarow.newrow("First Name", input, input, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The First Name field is required."))
                        {
                            this.datarow.newrow("First Name", input, "The First Name field is required.", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("First Name", input, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str14, "^[a-zA-Z'']"))
                        {
                            this.datarow.newrow("Last Name", str14, str14, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Last Name field is required."))
                        {
                            this.datarow.newrow("Last Name", str14, "The Last Name field is required.", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Last Name", str14, "No Error message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str22, "^[a-zA-Z0-9'']"))
                        {
                            this.datarow.newrow("Address", str22, str22, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Address field is required"))
                        {
                            this.datarow.newrow("Address", str22, "The Address field is required", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Address", str22, "No Error message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str24, "^[a-zA-Z0-9'']"))
                        {
                            this.datarow.newrow("Post Code", str24, str24, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Postcode field is required"))
                        {
                            this.datarow.newrow("Post Code", str24, "The Postcode field is required.", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Post Code", str24, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str26, "^[a-zA-Z'']"))
                        {
                            this.datarow.newrow("Country", str26, str26, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Country field is required."))
                        {
                            this.datarow.newrow("Country", str26, "The Country field is required.", "PASS", driver, selenium);
                        }
                        else
                        {
                            this.datarow.newrow("Country", str26, "No Error Message", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        string Title = selenium.GetTitle();
                        if (Title != "Secure Payment Page")
                        {
                            if (Title == "Redirect to External")
                            {
                                this.Dsecure(driver, selenium);
                                break;
                            }
                            if (selenium.IsTextPresent("Checkout Accepted"))
                            {
                                this.Normaltransaction(driver, selenium);
                                break;
                            }
                            if (selenium.IsTextPresent("Checkout Declined") || selenium.IsTextPresent("Checkout Error"))
                            {
                                this.datarow.newrow("Checkout", "Checkout Declined", "Checkout Declined", "PASS", driver, selenium);
                                if (selenium.IsElementPresent("link=start again"))
                                {
                                    selenium.Click("link=start again");
                                }
                                else
                                {
                                    driver.Navigate().GoToUrl("http://devpaytest.mobankdev.com/");
                                }
                                break;
                            }
                        }
                    }
                }
            }
            catch (Exception exception2)
            {
                Console.Write(exception2);
                string str28 = exception2.ToString();
                MoBankUI.Screenshot screenshot2 = new MoBankUI.Screenshot();
                this.datarow.newrow("Checkout", "Server Error", str28, "FAIL", driver, selenium);
                screenshot2.screenshotfailed(driver, selenium);
            }
            finally
            {
                string emails = null;
                new MoBankUI.Screenshot().screenshotnotifications(driver, selenium);
                this.datarow.excelsave("MoPayReport", driver, selenium, "teja.vellanki@mobankgroup.com");
                new GenerateEmail().SendEMail("MoPayReport", emails);
                driver.Quit();
            }
        }
        
        public void Normaltransaction(IWebDriver driver, ISelenium selenium)
        {
            string location = selenium.GetLocation();
            if (location.Contains("State=Accepted"))
            {
                this.datarow.newrow("Transaction", location, "State=Accepted", "PASS", driver, selenium);
                if (selenium.IsElementPresent("link=start again"))
                {
                    selenium.Click("link=start again");
                }
                else
                {
                    driver.Navigate().GoToUrl("http://devpaytest.mobankdev.com/");
                }
            }
            else
            {
                this.datarow.newrow("Transaction", location, "Transaction Declined", "FAIL", driver, selenium);
                if (selenium.IsElementPresent("link=start again"))
                {
                    selenium.Click("link=start again");
                }
                else
                {
                    driver.Navigate().GoToUrl("http://devpaytest.mobankdev.com/");
                }
            }
        }
    }
}
