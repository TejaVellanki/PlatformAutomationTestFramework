// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe

using System;
using System.Data;
using System.Text.RegularExpressions;
using System.Threading;
using NUnit.Framework;
using OpenQA.Selenium;
using Selenium;

namespace MoBankUI
{
    public class MopayBackup
    {
        private readonly datarow datarow = new datarow();
        private GeneralLibrary generalLibrary;
        public WebDriverBackedSelenium selenium;

        public void Dsecure(IWebDriver driver, ISelenium selenium)
        {
            if (selenium.IsElementPresent("iframe"))
            {
                IWebElement frameElement = driver.FindElement(By.TagName("iframe"));
                driver.SwitchTo().Frame(frameElement);
                driver.FindElement(By.CssSelector("input[type=\"submit\"]")).Click();
                Thread.Sleep(0x1388);
                driver.SwitchTo().Alert().Accept();
                selenium.SelectWindow("null");
                Thread.Sleep(0x1f40);
                string location = selenium.GetLocation();
                if (location.Contains("3DSecureState=Success"))
                {
                    datarow.newrow("3D secure", location, "3DSecureState=Success", "PASS", driver, selenium);
                    selenium.Click("link=start again");
                }
                else if (location.Contains("State=Declined"))
                {
                    datarow.newrow("3D secure", location, "3D secure Declined", "FAIL", driver, selenium);
                    selenium.Click("link=start again");
                }
            }
            else
            {
                string actual = selenium.GetLocation();
                datarow.newrow("Checkout", "Server Error", actual, "FAIL", driver, selenium);
                new Screenshot().screenshotfailed(driver, selenium);
                selenium.Open("http://devpaytest.mobankdev.com/");
            }
        }

        public void MoPay(IWebDriver driver, ISelenium selenium)
        {
            generalLibrary = new GeneralLibrary();
            DataSet excelData = generalLibrary.GetExcelData(@"C:\Selenium\Input Data\CardDetails.xls", "CardDetails");
            DataSet set2 = generalLibrary.GetExcelData(@"C:\Selenium\Input Data\CardDetails.xls", "Account");
            datarow.col();
            DataTable table = excelData.Tables[0];
            DataTable table2 = set2.Tables[0];
            int count = table2.Rows.Count;
            try
            {
                for (int i = 0; i < count; i++)
                {
                    string locator = table2.Rows[i]["Account"].ToString();
                    string str2 = table2.Rows[i]["Type"].ToString();
                    string str3 = table2.Rows[i]["E-mail"].ToString();
                    string str4 = table2.Rows[i]["FormData"].ToString();
                    string str5 = table2.Rows[i]["FormValue"].ToString();
                    string str6 = table2.Rows[i]["CookieData"].ToString();
                    string str7 = table2.Rows[i]["CookieValue"].ToString();
                    selenium.Open("http://devpaytest.mobankdev.com/");
                    driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(15.0));
                    IWebElement element = driver.FindElement(By.XPath("//div[@id='ReferenceControl']/div/input"));
                    driver.FindElement(By.XPath(locator)).Click();
                    selenium.Click(locator);
                    selenium.Click(str2);
                    string attribute =
                        driver.FindElement(By.XPath("//div[@id='ReferenceControl']/div/input"))
                              .GetAttribute("Reference");
                    string str9 =
                        driver.FindElement(By.XPath("//div[@id='TotalAmountControl']/div/input")).GetAttribute("Amt");
                    string str10 =
                        driver.FindElement(By.XPath("//div[@id='CurrencyCodeControl']/div/select")).GetAttribute("Cur");
                    string input = table.Rows[0]["FirstName"].ToString();
                    string str12 = table.Rows[0]["LastName"].ToString();
                    Assert.AreEqual("The MoShop Sale",
                                    driver.FindElement(By.XPath("//div[@id='DescriptionControl']/div/textarea")).Text);
                    var screenshot = new Screenshot();
                    driver.FindElement(By.XPath("//div[@id='FirstNameControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='FirstNameControl']/div/input")).SendKeys(input);
                    driver.FindElement(By.XPath("//div[@id='LastNameControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='LastNameControl']/div/input")).SendKeys(str12);
                    driver.FindElement(By.XPath("//div[@id='EmailControl']/div/input")).Clear();
                    driver.FindElement(By.XPath("//div[@id='EmailControl']/div/input")).SendKeys(str3);
                    selenium.Click("css=button");
                    selenium.Type("name=FormData[1].Key", str4);
                    selenium.Type("name=FormData[1].Value", str5);
                    selenium.Click("css=#CookieData > button");
                    selenium.Type("name=CookieData[1].Key", str6);
                    selenium.Type("name=CookieData[1].Value", str7);
                    driver.FindElement(By.CssSelector("input[type=\"submit\"]")).Click();
                    try
                    {
                        selenium.WaitForPageToLoad("60000");
                    }
                    catch (Exception exception)
                    {
                        Console.Write(exception);
                    }
                    int num3 = table.Rows.Count;
                    for (int j = 0; j < num3; j++)
                    {
                        string str13 = table.Rows[j]["Card Number"].ToString();
                        string str14 = table.Rows[j]["Security Code"].ToString();
                        string expected = table.Rows[j]["CardType"].ToString();
                        string str16 = table.Rows[j]["Name on Card"].ToString();
                        string optionLocator = table.Rows[j]["ExpiryMonth"].ToString();
                        string str18 = table.Rows[j]["Expiry Year"].ToString();
                        string str19 = table.Rows[j]["Phone Number"].ToString();
                        string str20 = table.Rows[j]["Address"].ToString();
                        string str21 = table.Rows[j]["City"].ToString();
                        string str22 = table.Rows[j]["Post Code"].ToString();
                        string str23 = table.Rows[j]["County"].ToString();
                        string str24 = table.Rows[j]["Country"].ToString();
                        driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(60.0));
                        IWebElement element2 = driver.FindElement(By.XPath("//div[@id='Card.NameControl']/input"));
                        Assert.AreEqual("Secure Payment Page", driver.Title);
                        selenium.Type("//*[@id='Card_Number']", str13);
                        selenium.Type("//*[@id='Card_SecurityCode']", str14);
                        selenium.Select("id=Card_Type", "label=Visa Debit");
                        selenium.Select("id=Card_ExpiryDate_Month", optionLocator);
                        selenium.Select("id=Card_ExpiryDate_Year", str18);
                        selenium.Type("//div[@id='Card.NameControl']/input", str16);
                        switch (str2)
                        {
                            case "id=actionPay":
                                selenium.Type("id=BillingContact_Phone_Number", str19);
                                selenium.Type("id=BillingContact_Address_Line1", str20);
                                selenium.Type("//div[@id='BillingContact.Address.Line2Control']/input", "s");
                                selenium.Type("id=BillingContact_Address_Postcode", str22);
                                selenium.Type("//div[@id='BillingContact.Address.TownControl']/input", str21);
                                selenium.Type("id=BillingContact_Address_County", str23);
                                selenium.Select("//div[@id='BillingContact.Address.CountryControl']/div/div/select",
                                                str24);
                                break;

                            case "id=actionToken":
                                selenium.Type("id=Contact_Phone_Number", str19);
                                selenium.Type("id=Contact_Address_Line1", str20);
                                selenium.Type("//div[@id='Contact.Address.Line2Control']/input", "s");
                                selenium.Type("id=Contact_Address_Postcode", str22);
                                selenium.Type("//div[@id='Contact.Address.TownControl']/input", str21);
                                selenium.Type("id=Contact_Address_County", str23);
                                selenium.Select("//div[@id='Contact.Address.CountryControl']/div/div/select", str24);
                                break;
                        }
                        selenium.Click("name=PostAction[Complete]");
                        selenium.WaitForPageToLoad("30000");
                        Thread.Sleep(0x1388);
                        if (Regex.IsMatch(str13, "^[0-9'']"))
                        {
                            datarow.newrow("Card Number", str13, str13, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Number required") || selenium.IsTextPresent("Number invalid"))
                        {
                            datarow.newrow("Card Number", str13, "Number Invalid", "PASS", driver, selenium);
                        }
                        else
                        {
                            datarow.newrow("Card Number", str13, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (expected == null)
                        {
                            if (selenium.IsTextPresent("Type required"))
                            {
                                datarow.newrow("Card Type", expected, "Type Required", "PASS", driver, selenium);
                            }
                            else
                            {
                                datarow.newrow("Card Type", expected, expected, "FAIL", driver, selenium);
                                screenshot.screenshotfailed(driver, selenium);
                            }
                        }
                        else
                        {
                            datarow.newrow("Card Type", expected, expected, "PASS", driver, selenium);
                        }
                        var regex = new Regex("^[0-9]{3}$");
                        if (regex.IsMatch(str14))
                        {
                            datarow.newrow("Security Code", str14, "Valid 3 Digits", "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Security code required") ||
                                 selenium.IsTextPresent("Security code invalid"))
                        {
                            datarow.newrow("Security Code", str14, "Security code required", "PASS", driver,
                                           selenium);
                        }
                        else
                        {
                            datarow.newrow("Security Code", str14, "No Error Message Displayed", "FAIL", driver,
                                           selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str16, "^[a-zA-Z'']"))
                        {
                            datarow.newrow("Name on Card", str16, str16, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("Name required"))
                        {
                            datarow.newrow("Name on Card", str16, "Name Required", "PASS", driver, selenium);
                        }
                        else
                        {
                            datarow.newrow("Name on Card", str16, "No Error Message Displayed", "PASS", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(input, "^[a-zA-Z'']"))
                        {
                            datarow.newrow("First Name", input, input, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The First Name field is required."))
                        {
                            datarow.newrow("First Name", input, "The First Name field is required.", "PASS", driver,
                                           selenium);
                        }
                        else
                        {
                            datarow.newrow("First Name", input, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str12, "^[a-zA-Z'']"))
                        {
                            datarow.newrow("Last Name", str12, str12, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Last Name field is required."))
                        {
                            datarow.newrow("Last Name", str12, "The Last Name field is required.", "PASS", driver,
                                           selenium);
                        }
                        else
                        {
                            datarow.newrow("Last Name", str12, "No Error message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str20, "^[a-zA-Z0-9'']"))
                        {
                            datarow.newrow("Address", str20, str20, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Address field is required"))
                        {
                            datarow.newrow("Address", str20, "The Address field is required", "PASS", driver, selenium);
                        }
                        else
                        {
                            datarow.newrow("Address", str20, "No Error message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str22, "^[a-zA-Z0-9'']"))
                        {
                            datarow.newrow("Post Code", str22, str22, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Postcode field is required"))
                        {
                            datarow.newrow("Post Code", str22, "The Postcode field is required.", "PASS", driver,
                                           selenium);
                        }
                        else
                        {
                            datarow.newrow("Post Code", str22, "No Error Message Displayed", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        if (Regex.IsMatch(str24, "^[a-zA-Z'']"))
                        {
                            datarow.newrow("Country", str24, str24, "PASS", driver, selenium);
                        }
                        else if (selenium.IsTextPresent("The Country field is required."))
                        {
                            datarow.newrow("Country", str24, "The Country field is required.", "PASS", driver, selenium);
                        }
                        else
                        {
                            datarow.newrow("Country", str24, "No Error Message", "FAIL", driver, selenium);
                            screenshot.screenshotfailed(driver, selenium);
                        }
                        string title = selenium.GetTitle();
                        if (title != "Secure Payment Page")
                        {
                            if (title == "Redirect to External")
                            {
                                Dsecure(driver, selenium);
                                break;
                            }
                            if (selenium.IsTextPresent("Checkout Accepted"))
                            {
                                Normaltransaction(driver, selenium);
                                break;
                            }
                            if (selenium.IsTextPresent("Checkout Declined") || selenium.IsTextPresent("Checkout Error"))
                            {
                                datarow.newrow("Checkout", "Checkout Declined", "Checkout Declined", "PASS", driver,
                                               selenium);
                                selenium.Click("link=start again");
                                break;
                            }
                        }
                    }
                }
            }
            catch (Exception exception2)
            {
                Console.Write(exception2);
                string actual = exception2.ToString();
                var screenshot2 = new Screenshot();
                datarow.newrow("Checkout", "Server Error", actual, "FAIL", driver, selenium);
                screenshot2.screenshotfailed(driver, selenium);
            }
            finally
            {
                new Screenshot().screenshotnotifications(driver, selenium);
                datarow.excelsave("MoPayReport", driver, selenium, "teja.vellanki@mobankgroup.com");
                driver.Quit();
            }
        }

        public void Normaltransaction(IWebDriver driver, ISelenium selenium)
        {
            string location = selenium.GetLocation();
            if (location.Contains("State=Accepted"))
            {
                datarow.newrow("Transaction", location, "State=Accepted", "PASS", driver, selenium);
                selenium.Click("link=start again");
            }
            else if (location.Contains("State=Declined"))
            {
                datarow.newrow("Transaction", location, "Transaction Declined", "FAIL", driver, selenium);
                selenium.Click("link=start again");
            }
            else
            {
                string actual = selenium.GetLocation();
                datarow.newrow("Checkout", "Server Error", actual, "FAIL", driver, selenium);
                new Screenshot().screenshotfailed(driver, selenium);
                selenium.Open("http://devpaytest.mobankdev.com/");
            }
        }
    }
}