// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using Selenium;
    using System;
    using System.Threading;
    
    internal class Deletebasketstart
    {
        private MoBankUI.Screenshot screenshot = new MoBankUI.Screenshot();
        
        public void deletebasstart(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            try
            {
                bool flag;
                new DeleteBasket_TPS().basket(driver, selenium, datarow);
                IJavaScriptExecutor executor = (IJavaScriptExecutor) driver;
                executor.ExecuteScript("window.scrollBy(0,400)", new object[0]);
                executor.ExecuteScript("window.scrollBy(0,80)", new object[0]);
                driver.FindElement(By.Id("GoToCheckout")).Click();
                selenium.WaitForPageToLoad("30000");
                Thread.Sleep(0x7d0);
                if (!selenium.IsTextPresent("Product unavailable"))
                {
                    return;
                }
                int l = 2;
                goto Label_00FF;
            Label_0086:
                if (selenium.IsTextPresent("Product unavailable"))
                {
                    datarow.newrowTPS("Product Unavailable", "", "Product Unavilable", "FAIL", driver, selenium);
                    this.screenshot.screenshotfailed(driver, selenium);
                    this.productunavailabl(selenium, driver, l, datarow);
                    driver.FindElement(By.XPath("//a[@id='GoToCheckout']/span")).Click();
                    selenium.WaitForPageToLoad("30000");
                }
                else
                {
                    return;
                }
                l++;
            Label_00FF:
                flag = true;
                goto Label_0086;
            }
            catch (Exception exception)
            {
                string actual = exception.ToString();
                datarow.newrowTPS("Exception", "Not Expected", actual, "FAIL", driver, selenium);
                this.screenshot.screenshotfailed(driver, selenium);
            }
        }
        
        public void productunavailabl(ISelenium selenium, IWebDriver driver, int l, datarow_TPS datarow)
        {
            try
            {
                products_TPS s_tps;
                bool flag;
                if (selenium.IsElementPresent("//body[@id='Top']/div/div[2]/div[2]/ul/li[2]/a/span"))
                {
                    selenium.Click("//body[@id='Top']/div/div[2]/div[2]/ul/li[2]/a/span");
                    selenium.WaitForPageToLoad("30000");
                }
                else if (selenium.IsElementPresent("//ul[@id='Basket']/li/a/span"))
                {
                    driver.FindElement(By.XPath("//ul[@id='Basket']/li/a/span")).Click();
                    selenium.WaitForPageToLoad("30000");
                }
                selenium.Click("css=img");
                selenium.WaitForPageToLoad("30000");
                driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(10.0));
                IWebElement element = driver.FindElement(By.XPath("//html/body/div/div[2]/div/ul/li/div/div/a/h2"));
                driver.FindElement(By.XPath("//html/body/div/div[2]/div/ul/li/div/div/a/h2")).Click();
                selenium.WaitForPageToLoad("30000");
                string str = driver.Title.ToString();
                decimal xpathCount = selenium.GetXpathCount("//html/body/div/div[2]/div/ul/li");
                int num2 = 1;
                goto Label_0187;
            Label_00F3:
                if (!selenium.IsElementPresent("//html/body/div/div[2]/div/ul/li[" + l + "]/div/div/a/h2"))
                {
                    goto Label_018F;
                }
                driver.FindElement(By.XPath("//html/body/div/div[2]/div/ul/li[" + l + "]/div/div/a/h2")).Click();
                selenium.WaitForPageToLoad("30000");
                string str2 = driver.Title.ToString();
                if (!selenium.GetLocation().Contains("category"))
                {
                    goto Label_018F;
                }
                num2++;
            Label_0187:
                flag = true;
                goto Label_00F3;
            Label_018F:
                s_tps = new products_TPS();
                s_tps.product(driver, selenium, datarow);
            }
            catch (Exception exception)
            {
                string actual = exception.ToString();
                datarow.newrowTPS("Exception", "Not Expected", actual, "FAIL", driver, selenium);
                this.screenshot.screenshotfailed(driver, selenium);
            }
        }
    }
}
