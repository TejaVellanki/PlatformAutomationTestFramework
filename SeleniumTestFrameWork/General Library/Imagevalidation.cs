// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using Selenium;
    using System;
    
    internal class Imagevalidation
    {
        private int l = 1;
        
        public void categoryimage(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            try
            {
                if (this.l < 3)
                {
                    string location = selenium.GetLocation();
                    if (selenium.IsElementPresent("css=img.categoryImage"))
                    {
                        string attribute = driver.FindElement(By.XPath("//body[@id='page-categories-details']/div/div[2]/div/img")).GetAttribute("src");
                        datarow.newrowTPS("Image Validation", "", attribute, "PASS", driver, selenium);
                    }
                    else
                    {
                        datarow.newrowTPS("Image Validation", "", "No Image for Category page-" + location, "FAIL", driver, selenium);
                    }
                    this.l++;
                }
            }
            catch (Exception exception)
            {
                string str3 = exception.ToString();
                datarow.newrowTPS("Exception", "", "Exception Not Expected", "FAIL", driver, selenium);
            }
        }
        
        public void homepageimage(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            try
            {
                string location = selenium.GetLocation();
                if (selenium.IsElementPresent("//body[@id='page-home-index']/div/div[2]/div/img"))
                {
                    string attribute = driver.FindElement(By.XPath("//body[@id='page-home-index']/div/div[2]/div/img")).GetAttribute("src");
                    datarow.newrowTPS("Image Validation", "", attribute, "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrowTPS("Image Validation", "", "No Image for Home Page-" + location, "FAIL", driver, selenium);
                }
            }
            catch (Exception exception)
            {
                string str3 = exception.ToString();
                datarow.newrowTPS("Exception", "", "Exception Not Expected", "FAIL", driver, selenium);
            }
        }
        
        public void productImage(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            try
            {
                string attribute;
                string location = selenium.GetLocation();
                if (selenium.IsElementPresent("//body[@id='page-products-details']/div/div[2]/div/div[2]/ul/li/img"))
                {
                    attribute = driver.FindElement(By.XPath("//body[@id='page-products-details']/div/div[2]/div/div[2]/ul/li/img")).GetAttribute("src");
                    datarow.newrowTPS("Image Validation", "", attribute, "PASS", driver, selenium);
                }
                else if (selenium.IsElementPresent("css=li.flex-active-slide > img"))
                {
                    decimal xpathCount = selenium.GetXpathCount("//body[@id='page-products-details']/div/div[2]/div/div[2]/div/ul/li");
                    for (int i = 2; i < xpathCount; i++)
                    {
                        attribute = driver.FindElement(By.XPath("//body[@id='page-products-details']/div/div[2]/div/div[2]/div/ul/li[" + i + "]/img")).GetAttribute("src");
                        datarow.newrowTPS("Image Validation", "", attribute, "PASS", driver, selenium);
                    }
                }
                else
                {
                    datarow.newrowTPS("Image Validation", "", "No Image in Product Page-" + location, "PASS", driver, selenium);
                }
            }
            catch (Exception exception)
            {
                string str3 = exception.ToString();
                datarow.newrowTPS("Exception", "", "Exception Not Expected", "FAIL", driver, selenium);
            }
        }
        
        public void subcategoryimage(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            try
            {
            }
            catch (Exception exception)
            {
                string str = exception.ToString();
                datarow.newrowTPS("Exception", "", "Exception Not Expected", "FAIL", driver, selenium);
            }
        }
    }
}
