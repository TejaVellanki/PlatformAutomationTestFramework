// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using Microsoft.Office.Interop.Excel;
    using OpenQA.Selenium;
    using Selenium;
    using System;
    using System.Data;
    using System.Diagnostics;
    
    public class datarow
    {
        private System.Data.DataTable dt = new System.Data.DataTable();
        private GeneralLibraryTPS generalLibrary;
        
        public void col()
        {
            this.dt.Columns.Add("Field Validated");
            this.dt.Columns.Add("Expected Result");
            this.dt.Columns.Add("Actual Result");
            this.dt.Columns.Add("PASS or FAIL");
            this.dt.Columns.Add("Total Number Of Test Cases Passed/Failed");
        }
        
        public void dataflush()
        {
            this.dt.Clear();
        }
        
        public void excelsave(string ReportName, IWebDriver driver, ISelenium selenium)
        {
            int num = 0;
            int num2 = 0;
            for (int i = 0; i < this.dt.Rows.Count; i++)
            {
                switch (this.dt.Rows[i]["PASS or FAIL"].ToString())
                {
                    case "PASS":
                        num++;
                        break;
                    
                    case "FAIL":
                        num2++;
                        break;
                }
            }
            string p = num.ToString();
            string f = num2.ToString();
            int num4 = 0;
            foreach (DataRow row in this.dt.Rows)
            {
                switch (num4)
                {
                    case 0:
                        row[4] = "Total Number of Test Cases Passed-" + p;
                        break;
                    
                    case 1:
                        row[4] = "Total Number of Test Cases Failed-" + f;
                        goto Label_0134;
                }
                num4++;
            }
        Label_0134:
            this.dt.TableName = "MyTable";
            new ConverttoHTML().ConvertDataTableToHtml(this.dt, ReportName, p, f);
            this.generalLibrary = new GeneralLibraryTPS();
            Workbook workbook = this.generalLibrary.CreateAndOpenExcelFileTPS(@"C:\Selenium\Input Data", ref ReportName, "Report", ".xlsx", false, true);
            Worksheet ws = (Worksheet) workbook.Worksheets[1];
            string emails = null;
            this.generalLibrary.ConsolidatedXmlExportToExcelTPS(this.dt, ws, true, false, false);
            this.generalLibrary.SaveAndCloseExcelTPS(workbook);
            new GenerateEmail().SendEMail(ReportName, emails);
            this.dt.WriteXml(@"C:\Selenium\Input Data\XML Reports\" + ReportName + ".xml");
            foreach (Process process in Process.GetProcessesByName("EXCEL"))
            {
                if (process.MainModule.ModuleName.ToUpper().Equals("EXCEL.EXE"))
                {
                    process.Kill();
                    break;
                }
            }
        }
        
        public void newrow(string validation, string expected, string actual, string passorfail, IWebDriver driver, ISelenium selenium)
        {
            DataRow row = this.dt.NewRow();
            row[0] = validation;
            row[1] = expected;
            row[2] = actual;
            row[3] = passorfail;
            this.dt.Rows.Add(row);
        }
    }
}
