// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using System;
    using System.Data;
    using System.Globalization;
    using System.IO;
    using System.Text;
    using System.Windows.Forms;
    
    public class ConverttoHTML
    {
        private Control c = new Control();
        
        public string ConvertDataTableToHtml(DataTable targetTable, string reportname, string P, string F)
        {
            string str = DateTime.Now.Year.ToString(CultureInfo.InvariantCulture) + "-" + DateTime.Now.Month.ToString(CultureInfo.InvariantCulture) + "-" + DateTime.Now.Day.ToString(CultureInfo.InvariantCulture) + "_" + DateTime.Now.Hour.ToString(CultureInfo.InvariantCulture) + "-" + DateTime.Now.Minute.ToString(CultureInfo.InvariantCulture) + "-" + DateTime.Now.Second.ToString(CultureInfo.InvariantCulture);
            string str2 = "";
            if (targetTable == null)
            {
                throw new ArgumentNullException("targetTable");
            }
            StringBuilder builder = new StringBuilder();
            builder.Append("<html>");
            builder.Append("<head>");
            builder.Append("<script type=\"text/javascript\" src=\"attachment/file/filterTable/filterTable.js\"> </script>");
            builder.Append("<Title>");
            builder.Append("Page-");
            builder.Append(Guid.NewGuid().ToString());
            builder.Append("</Title>");
            builder.Append("</head>");
            builder.Append("<body>");
            builder.Append("<BODY bgcolor=\"LightGray\">");
            builder.Append("<div id=\"container\">");
            builder.Append("<div id=\"header\" style=\"background-color:#B8B8B8;\">");
            builder.Append("<h1 align='middle' style=\"margin-bottom:0;\">Automation Test Report</h1></div>");
            builder.Append("<img border='0' src=\"http://www.mopowered.co.uk/wp-content/themes/starkers/images/header-logo.png\"/ align ='left'width ='100px' height =100px>");
            builder.Append("<div id=\"menu\"  face =\"Times New Roman\" size = '2' style=\"background-color:#66CDAA ;height:100px;width:250px;float:left;\">");
            if (reportname.Contains("Consolidated Report"))
            {
                builder.Append("<b>Test Run Name<br>Date And Time</b></div>");
                builder.Append("<div id=\"content\"  face =\"Times New Roman\" size = '2' style=\"background-color:#CCFFFF;height:100px;width:300px;float:left;align='middle';\">");
                builder.Append(reportname + "<br>" + str + "</div>");
            }
            else
            {
                builder.Append("<b>Test Run Name<br>Date And Time<br>Number Of Test cases Passed<br>Number Of Test Cases Failed</b></div>");
                builder.Append("<div id=\"content\"  face =\"Times New Roman\" size = '2' style=\"background-color:#CCFFFF;height:100px;width:300px;float:left;align='middle';\">");
                builder.Append(reportname + "<br>" + str + "<br>" + P + "<br>" + F + "</div>");
            }
            builder.Append("<div id=\"footer\" style=\"background-color:#E8E8E8;clear:both;text-align:center;\">");
            builder.Append("</div>");
            builder.Append("<table class=\"filterable\" border='1px' cellpadding='5' cellspacing='0' ");
            builder.Append("style='border: solid 1px Black; font-size: small;'>");
            builder.Append("<tr align='left' valign='top'>");
            builder.Append("<tr style=\"background-color:LightBlue;\">");
            foreach (DataColumn column in targetTable.Columns)
            {
                builder.Append("<td align='left' face =\"Times New Roman\" size = '2' valign='top'>");
                builder.Append(column.ColumnName);
                builder.Append("</td>");
            }
            builder.Append("</tr>");
            foreach (DataRow row in targetTable.Rows)
            {
                try
                {
                    builder.Append("<tr align='left' valign='top'>");
                    foreach (DataColumn column in targetTable.Columns)
                    {
                        string str3 = column.ToString();
                        switch (str3)
                        {
                            case "Field Validated":
                            case "Expected Result":
                            case "Actual Result":
                            case "PASS or FAIL":
                            case "Total Number Of Test Cases Passed/Failed":
                            {
                                string str4 = row[3].ToString();
                                string str5 = row[4].ToString();
                                switch (str4)
                                {
                                    case "PASS":
                                    {
                                        if (str3 != "Total Number Of Test Cases Passed/Failed")
                                        {
                                            builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:LightGreen;\">");
                                            builder.Append(row[column.ColumnName].ToString());
                                            builder.Append("</td>");
                                        }
                                        else if (str3 == "Total Number Of Test Cases Passed/Failed")
                                        {
                                            builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:Grey;\">");
                                            builder.Append(row[column.ColumnName].ToString());
                                            builder.Append("</td>");
                                        }
                                        continue;
                                    }
                                    case "FAIL":
                                    {
                                        if (str3 != "Total Number Of Test Cases Passed/Failed")
                                        {
                                            builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:Red;\">");
                                            builder.Append(row[column.ColumnName].ToString());
                                            builder.Append("</td>");
                                        }
                                        else if (str3 == "Total Number Of Test Cases Passed/Failed")
                                        {
                                            builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:Grey;\">");
                                            builder.Append(row[column.ColumnName].ToString());
                                            builder.Append("</td>");
                                        }
                                        continue;
                                    }
                                }
                                builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:LightGrey;\">");
                                builder.Append(row[column.ColumnName].ToString());
                                builder.Append("</td>");
                                break;
                            }
                            default:
                                builder.Append("<td align='left' valign='top' face =\"Times New Roman\" size = '2' style=\"background-color:LightGrey;\">");
                                builder.Append(row[column.ColumnName].ToString());
                                builder.Append("</td>");
                                break;
                        }
                    }
                    builder.Append("</tr>");
                }
                catch (Exception)
                {
                }
            }
            builder.Append("</table>");
            builder.Append("<script>");
            builder.Append(" function filter (term, _id, cellNr)");
            builder.Append("{");
            builder.Append("var suche = term.value.toLowerCase();");
            builder.Append("var table = document.getElementById(_id);");
            builder.Append("var ele;");
            builder.Append("for (var r = 1; r < " + targetTable + ".rows.length; r++){");
            builder.Append("ele =table.rows[r].cells[cellNr].innerHTML.replace(/<[^>]+>/g,'');");
            builder.Append("if (ele.toLowerCase().indexOf(suche)>=0 )");
            builder.Append("table.rows[r].style.display = '';");
            builder.Append("else table.rows[r].style.display = 'none';");
            builder.Append("}");
            builder.Append("}");
            builder.Append("</script>");
            builder.Append("</body>");
            builder.Append("</html>");
            str2 = builder.ToString();
            File.CreateText(@"C:\Selenium\Input Data\HTML Reports\" + reportname + ".html").Close();
            StreamWriter writer = File.AppendText(@"C:\Selenium\Input Data\HTML Reports\" + reportname + ".html");
            writer.WriteLine(str2);
            writer.Close();
            return str2;
        }
    }
}
