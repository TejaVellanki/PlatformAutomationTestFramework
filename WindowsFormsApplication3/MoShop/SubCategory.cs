// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using OpenQA.Selenium.Support.UI;
    using Selenium;
    using System;
    using System.Threading;
    
    internal class SubCategory
    {
        public void subcategoryscrape(IWebDriver driver, ISelenium selenium, datarow datarow)
        {
            driver.FindElement(By.Id("Selector")).Clear();
            driver.FindElement(By.Id("Selector")).SendKeys("div[class^='leftNav'] a,.bdr a");
            driver.FindElement(By.Id("Identifier")).Clear();
            driver.FindElement(By.Id("Identifier")).SendKeys("/acatalog/wrapping-paper-everyday.html");
            driver.FindElement(By.Id("IdentifierTransformationPattern")).Clear();
            driver.FindElement(By.Id("IdentifierTransformationPattern")).SendKeys(@"\/([a-z0-9\-_]+).html");
            driver.FindElement(By.Id("IdentifierTransformationReplacement")).Clear();
            driver.FindElement(By.Id("IdentifierTransformationReplacement")).SendKeys("$1");
            driver.FindElement(By.CssSelector("input.button")).Click();
            selenium.WaitForPageToLoad("30000");
            Thread.Sleep(0x7d0);
            new SelectElement(driver.FindElement(By.Id("MappingId"))).SelectByText("Sub-Categories");
            driver.FindElement(By.CssSelector("input.button")).Click();
            selenium.WaitForPageToLoad("30000");
            driver.FindElement(By.Id("MappingItems_0__Selector")).Clear();
            driver.FindElement(By.Id("MappingItems_0__Selector")).SendKeys("h1,h2 :first");
            new SelectElement(driver.FindElement(By.Id("MappingItems_0__DataPath"))).SelectByText("Name");
            new SelectElement(driver.FindElement(By.Id("MappingItems_0__TransformationId"))).SelectByText("Content Trim");
            driver.FindElement(By.CssSelector("input.button")).Click();
            selenium.WaitForPageToLoad("30000");
            Thread.Sleep(0x7d0);
            driver.FindElement(By.Id("MappingItems_1__Selector")).Clear();
            driver.FindElement(By.Id("MappingItems_1__Selector")).SendKeys("#banner");
            new SelectElement(driver.FindElement(By.Id("MappingItems_1__DataPath"))).SelectByText("Description");
            new SelectElement(driver.FindElement(By.Id("MappingItems_1__TransformationId"))).SelectByText("Content Trim");
            driver.FindElement(By.CssSelector("input.button")).Click();
            selenium.WaitForPageToLoad("30000");
            Thread.Sleep(0x7d0);
            driver.FindElement(By.Id("SubPages_0__Name")).Clear();
            driver.FindElement(By.Id("SubPages_0__Name")).SendKeys("Products");
            new SelectElement(driver.FindElement(By.Id("SubPages_0__ObjectTypeName"))).SelectByText("Product");
            driver.FindElement(By.CssSelector("input.button")).Click();
            selenium.WaitForPageToLoad("30000");
            Thread.Sleep(0x7d0);
            string attribute = driver.FindElement(By.Id("Selector")).GetAttribute("Value");
            string actual = driver.FindElement(By.Id("Identifier")).GetAttribute("Value");
            string str3 = driver.FindElement(By.Id("IdentifierTransformationPattern")).GetAttribute("Value");
            string str4 = driver.FindElement(By.Id("IdentifierTransformationReplacement")).GetAttribute("Value");
            string str5 = driver.FindElement(By.Id("MappingItems_0__Selector")).GetAttribute("Value");
            string str6 = driver.FindElement(By.Id("MappingItems_1__Selector")).GetAttribute("Value");
            string str7 = driver.FindElement(By.Id("SubPages_0__Name")).GetAttribute("Value");
            if (attribute == "div[class^='leftNav'] a,.bdr a")
            {
                datarow.newrow("Subcategory Selector", "div[class^='leftNav'] a,.bdr a", attribute, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Subcategory Selector", "div[class^='leftNav'] a,.bdr a", attribute, "FAIL", driver, selenium);
            }
            if (actual == "/acatalog/wrapping-paper-everyday.html")
            {
                datarow.newrow("Sub-Category Identifier", "/acatalog/wrapping-paper-everyday.html", actual, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub-Category Identifier", "/acatalog/wrapping-paper-everyday.html", actual, "FAIL", driver, selenium);
            }
            if (str3 == @"\/([a-z0-9\-_]+).html")
            {
                datarow.newrow("Sub-Category Identifier Transformation", @"\/([a-z0-9\-_]+).html", str3, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub-Category Identifier Transformation", @"\/([a-z0-9\-_]+).html", str3, "FAIL", driver, selenium);
            }
            if (str4 == "$1")
            {
                datarow.newrow("Sub-Category Identifier Replacement", "$1", str4, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub-Category Identifier Replacement", "$1", str4, "FAIL", driver, selenium);
            }
            if (str5 == "h1,h2 :first")
            {
                datarow.newrow("Sub Category mapping Selector", "h1,h2 :first", str5, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub-Category mapping Selector", "h1,h2 :first", str5, "FAIL", driver, selenium);
            }
            if (str6 == "#banner")
            {
                datarow.newrow("Sub-category mapping selector2", "#banner", str6, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub-category mapping selector2", "#banner", str6, "FAIL", driver, selenium);
            }
            if (str7 == "Products")
            {
                datarow.newrow("Sub Pages", "Products", str7, "PASS", driver, selenium);
            }
            else
            {
                datarow.newrow("Sub Pages", "Products", str7, "FAIL", driver, selenium);
            }
            new ProductScrape().productscrape(driver, selenium, datarow);
        }
    }
}
