// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using OpenQA.Selenium.Support.UI;
    using Selenium;
    using System;
    
    internal class LoginandRegistration_TPS
    {
        public void Login_TPS(IWebDriver driver, ISelenium selenium, datarow_TPS datarow)
        {
            MoBankUI.Screenshot screenshot = new MoBankUI.Screenshot();
            try
            {
                decimal xpathCount;
                int num2;
                string str5;
                if (selenium.IsElementPresent("//form[@id='ctl00']/section/div/input"))
                {
                    driver.FindElement(By.XPath("//form[@id='ctl00']/section/div/input")).SendKeys("mopoweredtest@mobankgroup.com");
                    datarow.newrowTPS("Login Name Element", "Login Name Field Is Expected", "Login Name Field Is Present", "PASS", driver, selenium);
                }
                else if (selenium.IsElementPresent("id=UserName"))
                {
                    driver.FindElement(By.Id("UserName")).SendKeys("mopoweredtest@mobankgroup.com");
                    datarow.newrowTPS("Login Name Element", "Login Name Field Is Expected", "Login Name Field Is Present", "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrowTPS("Login Name Element", "Login Name Field Is Expected", "Blocker-Login Name Field Is Not Present", "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                if (selenium.IsElementPresent("//form[@id='ctl00']/section/div[2]/input"))
                {
                    driver.FindElement(By.XPath("//form[@id='ctl00']/section/div[2]/input")).SendKeys("M0Test08");
                    datarow.newrowTPS("Login Name Element", "Login Password Field Is Expected", "Login Password Field Is Present", "PASS", driver, selenium);
                }
                else if (selenium.IsElementPresent("id=Password"))
                {
                    driver.FindElement(By.Id("Password")).SendKeys("M0Test08");
                    datarow.newrowTPS("Login Name Element", "Login Password Field Is Expected", "Login Password Field Is Present", "PASS", driver, selenium);
                }
                else
                {
                    datarow.newrowTPS("Login Password Element", "Login Password Field Is Expected", "Blocker - Login Password Field Is Not Present", "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                if (selenium.IsElementPresent("//form[@id='ctl00']/section/div[3]/div/input"))
                {
                    driver.FindElement(By.XPath("//form[@id='ctl00']/section/div[3]/div/input")).Click();
                    selenium.WaitForPageToLoad("30000");
                }
                else if (selenium.IsElementPresent("css=input.ui-btn-hidden"))
                {
                    selenium.Click("css=input.ui-btn-hidden");
                    selenium.WaitForPageToLoad("30000");
                }
                else
                {
                    datarow.newrowTPS("Login Element", "Login Button Is Expected", "Blocker - Login Button Is Not Present", "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                if (selenium.IsElementPresent("id=BasketInfo"))
                {
                    string actual = driver.FindElement(By.Id("BasketInfo")).Text;
                    if (actual == "(1)")
                    {
                        datarow.newrowTPS("Basket Value", "(1)", actual, "PASS", driver, selenium);
                    }
                    else
                    {
                        datarow.newrowTPS("Basket Value", "(1)", actual, "FAIL", driver, selenium);
                        screenshot.screenshotfailed(driver, selenium);
                    }
                }
                else
                {
                    datarow.newrowTPS("Basket Value", "(1)", "No Basket Information", "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                if (selenium.IsElementPresent("//html/body/div/div[2]/div[2]/form/section/p/a/span/span/span/span"))
                {
                    datarow.newrowTPS("Change Details Element", "Change Details Button is Expected", "Change Details Button Is Present", "PASS", driver, selenium);
                    selenium.Click("//html/body/div/div[2]/div[2]/form/section/p/a/span/span/span/span");
                    selenium.WaitForPageToLoad("30000");
                    try
                    {
                        xpathCount = selenium.GetXpathCount("//form[@id='ctl00']/section/div");
                        for (num2 = 1; num2 <= xpathCount; num2++)
                        {
                            if (selenium.IsElementPresent("//form[@id='ctl00']/section/div[" + num2 + "]/label"))
                            {
                                string str2 = driver.FindElement(By.XPath("//form[@id='ctl00']/section/div[" + num2 + "]/label")).Text;
                                if (str2.Contains("*") || (str2 != "Country: *"))
                                {
                                    try
                                    {
                                        driver.FindElement(By.XPath("//form[@id='ctl00']/section/div[" + num2 + "]/input")).SendKeys("TEST");
                                        datarow.newrowTPS("Registration Field Name", "", str2, "PASS", driver, selenium);
                                    }
                                    catch (Exception exception1)
                                    {
                                        Exception exception = exception1;
                                        Console.Write(exception);
                                    }
                                }
                                if (str2 == "Country: *")
                                {
                                    string[] selectOptions = selenium.GetSelectOptions("id=Pagecontent_ddlCountry");
                                    string str3 = null;
                                    foreach (string str4 in selectOptions)
                                    {
                                        str3 = str3 + "\r\n" + str4;
                                        new SelectElement(driver.FindElement(By.Id("Pagecontent_ddlCountry"))).SelectByText(str4);
                                    }
                                    datarow.newrowTPS("Registration Field Countries", "", str3, "PASS", driver, selenium);
                                }
                            }
                        }
                    }
                    catch (Exception exception2)
                    {
                        str5 = exception2.ToString();
                        datarow.newrowTPS("Exception", "exception Not Expected", str5, "FAIL", driver, selenium);
                        screenshot.screenshotfailed(driver, selenium);
                    }
                }
                string location = selenium.GetLocation();
                if (location.Contains("Error"))
                {
                    datarow.newrowTPS("Error Page", "Error Page After Logging Not Expected", location, "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                driver.Navigate().Back();
                selenium.WaitForPageToLoad("30000");
                try
                {
                    if (selenium.IsElementPresent("//html/body/div/div[2]/div[2]/form/section/div[2]/fieldset/div/label/span/span"))
                    {
                        xpathCount = selenium.GetXpathCount("/html/body/div/div[2]/div[2]/form/section/div[2]/fieldset/div");
                        for (num2 = 1; num2 < xpathCount; num2++)
                        {
                            string text = selenium.GetText("//html/body/div/div[2]/div[2]/form/section/div[2]/fieldset/div[" + num2 + "]/label/span/span");
                            selenium.Click("//html/body/div/div[2]/div[2]/form/section/div[2]/fieldset/div[" + num2 + "]/label/span/span");
                            datarow.newrowTPS("Delivery Method", "", text, "PASS", driver, selenium);
                        }
                    }
                    else
                    {
                        string str8 = selenium.GetLocation();
                        datarow.newrowTPS("Delivery Method", "Unexpected Format", str8, "FAIL", driver, selenium);
                        screenshot.screenshotfailed(driver, selenium);
                    }
                }
                catch (Exception exception3)
                {
                    str5 = exception3.ToString();
                    datarow.newrowTPS("Delivery Method Exception", "Exception Not Expected", str5, "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                try
                {
                    if (selenium.IsElementPresent("Pagecontent_ButtonCheckoutStep2"))
                    {
                        string str9 = selenium.GetLocation();
                        datarow.newrowTPS("Checkout process url", "", str9, "PASS", driver, selenium);
                        driver.FindElement(By.Id("Pagecontent_ButtonCheckoutStep2")).Click();
                        selenium.WaitForPageToLoad("30000");
                    }
                    else
                    {
                        datarow.newrowTPS("Continue Button in Checkout Page", "Error Not Expected", "Pagecontent_ButtonCheckoutStep2-Element Not Present", "FAIL", driver, selenium);
                        screenshot.screenshotfailed(driver, selenium);
                    }
                }
                catch (Exception exception4)
                {
                    str5 = exception4.ToString();
                    datarow.newrowTPS("Continue Button Exception", "Exception Not Expected", str5, "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
                try
                {
                    if (selenium.IsElementPresent("id=Pagecontent_ButtonConfirmCheckout"))
                    {
                        driver.FindElement(By.Id("Pagecontent_ButtonConfirmCheckout")).Click();
                        selenium.WaitForPageToLoad("30000");
                        string str10 = driver.Title.ToString();
                        datarow.newrowTPS("Mopay Title", "", str10, "PASS", driver, selenium);
                    }
                    else
                    {
                        datarow.newrowTPS("Confirm Button in Checkout page", "Error Not Expected", "Pagecontent_ButtonConfirmCheckout - Element Not Present", "FAIL", driver, selenium);
                        screenshot.screenshotfailed(driver, selenium);
                    }
                }
                catch (Exception exception5)
                {
                    str5 = exception5.ToString();
                    datarow.newrowTPS("Pay Button Exception", "Exception Not Expected", str5, "FAIL", driver, selenium);
                    screenshot.screenshotfailed(driver, selenium);
                }
            }
            catch (Exception exception6)
            {
                string str11 = exception6.ToString();
                datarow.newrowTPS("Exception", "Exception Not Expected", str11, "FAIL", driver, selenium);
                screenshot.screenshotfailed(driver, selenium);
            }
        }
    }
}
