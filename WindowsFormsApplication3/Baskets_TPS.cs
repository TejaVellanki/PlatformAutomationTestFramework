// Generated by .NET Reflector from C:\Program Files\Default Company Name\Selenium Test Tool\MoBankUI.exe
namespace MoBankUI
{
    using OpenQA.Selenium;
    using Selenium;
    using System;
    
    internal class Baskets_TPS
    {
        private MoBankUI.Screenshot screenshot = new MoBankUI.Screenshot();
        
        public void Basket(IWebDriver driver, ISelenium selenium, datarow_TPS datarow, string url)
        {
            string str;
            try
            {
                driver.Navigate().GoToUrl(url);
                selenium.WaitForPageToLoad("30000");
                try
                {
                    driver.FindElement(By.Id("BasketInfo")).Click();
                    selenium.WaitForPageToLoad("30000");
                    datarow.newrowTPS("Basket Info Button", "Basket Info Button Is Expected", "Basket Info Button is Present", "PASS", driver, selenium);
                }
                catch (Exception exception1)
                {
                    str = exception1.ToString();
                    datarow.newrowTPS("Basket Info Button", "Basket Info Button Is Expected", str, "FAIL", driver, selenium);
                    this.screenshot.screenshotfailed(driver, selenium);
                }
                driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(10.0));
                IWebElement element = driver.FindElement(By.XPath("//body[@id='page-basket-index']/div/div[2]/div/div[2]/a/span"));
                try
                {
                    string actual = driver.FindElement(By.Id("BasketInfo")).Text;
                    if (actual == "(0)")
                    {
                        datarow.newrowTPS("Basket Value", "(0)", actual, "PASS", driver, selenium);
                    }
                    else
                    {
                        datarow.newrowTPS("Basket Value", "(0)", actual, "FAIL", driver, selenium);
                        this.screenshot.screenshotfailed(driver, selenium);
                    }
                }
                catch (Exception exception2)
                {
                    str = exception2.ToString();
                    datarow.newrowTPS("Basket Info Text", "Basket Info Text Is Expected", str, "FAIL", driver, selenium);
                    this.screenshot.screenshotfailed(driver, selenium);
                }
                new Footer_TPS().Footer(driver, selenium, datarow);
            }
            catch (Exception exception3)
            {
                str = exception3.ToString();
                datarow.newrowTPS("Exception", "Excepetion Not Expected", str, "FAIL", driver, selenium);
                this.screenshot.screenshotfailed(driver, selenium);
            }
        }
    }
}
